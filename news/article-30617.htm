<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freenekoray.github.io/news/article-30617.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>领域驱动模型DDD领域事件的订阅/发布实践</title>
        <meta name="description" content="前言 凭良心来说，《微服务架构设计模式》此书什么都好，就是选用的业务过于庞大而导致代码连贯性太差，我作为读者来说对于其中采用的自研框架看起来味同嚼蜡，需要花费的学习成本实在是难以想象，不仅要对书中的内" />
        <link rel="icon" href="/assets/website/img/freenekoray/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- Bootstrap CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/bootstrap.min.css">
    <!-- Nivo slider CSS
        ============================================ -->
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/freenekoray/custom-slider/css/nivo-slider.css" media="screen" />
    <link rel="stylesheet" type="text/css" href="__ADDON__/js/frontend/freenekoray/custom-slider/css/preview.css" media="screen" />
    <!-- Fontawsome CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/font-awesome.min.css">
    <!-- Flaticon CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/flaticon.css">
    <!-- material iconic CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.min.css">
    <!-- owl.carousel CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/owl.carousel.css">
    <!-- jquery-ui CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery-ui.css">
    <!-- meanmenu CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/meanmenu.min.css">
    <!-- animate CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate.css">
    <!-- Slick CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/slick.css">
    <!-- Venobox CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/venobox.css">
    <!-- Circle Chart CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.circliful.css">
    <!-- Color Switcher CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color-switcher.css">
    <!-- Animate headline CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate-heading.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/reset.css">
    <!-- Video CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.mb.YTPlayer.css">
    <!-- style CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/style.css">
    <!-- Responsive CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/responsive.css">
    <!-- Modernizr JS
        ============================================ -->
    <script src="/assets/website/js/frontend/freenekoray/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Color Css Files Start -->
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-one.css" title="color-one" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-two.css" title="color-two" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-three.css" title="color-three" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-four.css" title="color-four" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-five.css" title="color-five" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-six.css" title="color-six" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-seven.css" title="color-seven" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-eight.css" title="color-eight" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-nine.css" title="color-nine" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren1.css" title="pattren1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren2.css" title="pattren2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren3.css" title="pattren3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren4.css" title="pattren4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren5.css" title="pattren5" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background1.css" title="background1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background2.css" title="background2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background3.css" title="background3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background4.css" title="background4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background5.css" title="background5" media="screen" />
    <!-- Color Css Files End -->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-CZ0BL8Q290"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-CZ0BL8Q290');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Pre Loader
    ============================================ -->
    <div class="preloader">
        <div class="loading-center">
            <div class="loading-center-absolute">
                <div class="object object_one"></div>
                <div class="object object_two"></div>
                <div class="object object_three"></div>
            </div>
        </div>
    </div>
    <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->
    <div class="as-mainwrapper">
        <!-- header start -->
<header class="header-area">
    <div class="main-header-area bg-white sticker">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-md-2 col-sm-6 col-xs-12">
                    <div class="logo">
                                                <a href="/">Free Nekoray</a>
                                            </div>
                </div>
                <div class="col-lg-7 col-md-8 hidden-sm hidden-xs">
                    <div class="mainmenu-area">
                        <div class="mainmenu">
                            <nav>
                                <ul id="nav">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                        <li><a href="#">关于</a></li>
                                    <li><a href="#">联系</a></li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area start -->
    <div class="mobile-menu-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="mobile-menu">
                        <nav id="dropdown">
                            <ul>
                                                                <li><a href="/">首页</a>
                                                                    <li><a href="/free-nodes/">免费节点</a>
                                                                    <li><a href="/paid-subscribe/">推荐机场</a>
                                                                    <li><a href="/news/">新闻资讯</a>
                                                                    <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area end -->
</header>
<!-- header end -->
        <div class="main-content-wrapper">
            <!-- banner start -->
            <div class="banner-area blog">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="banner-text text-center">
                                <div class="banner-title">
                                    <h1>领域驱动模型DDD领域事件的订阅/发布实践</h1>
                                </div>
                                <div class="breadcrumbs">
                                    <ul>
                                        <li><a href="/">首页</a>></li>
                                        <li><a href="/news/">新闻资讯</a>></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- banner end -->
            <!-- about start-->
            <div class="about-reflex-area bg-white bg-white ptb-100">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2 id="前言">前言</h2> <p>凭良心来说，《微服务架构设计模式》此书什么都好，就是选用的业务过于庞大而导致代码连贯性太差，我作为读者来说对于其中采用的自研框架看起来味同嚼蜡，需要花费的学习成本实在是难以想象，不仅要对书中的内容进行了解，还要去学习作者框架用法，最可恶的是官方文档还写得十分简洁。</p> <p>不要跟我说《微服务架构设计模式》是一本概念性著作，对于我这水平一般的"实用派"来说在理解概念的雏形后最希望的就是通过书中的实现案例确认自己的理解是否正确，最后再巩固记忆尝试使用。</p> <p>如果你读了第一章可以看到，在该章节中我一直强调万不可在阅读文章时带入“正进行编程的思维”——即如何具体到代码块的编写或是相关技术的采用。</p> <p>这个劝诫与我此章采用代码讲解并不冲突，我举例的代码坚持从简：一是我水平和时间不足以让我做出像书本一样专业的企业案例；二是我认为过度繁琐的业务会让读者深陷代码解读而非吸取思想理念的困境中。从利用现实生活中的相似物比喻引导读者粗略理解概念，到简略的代码框架明了地让读者知道“某种思维”的大致应用方向，这一切始终围绕着本博客撰写的核心观点——“架构的设计”的阅读过程是思维视角的抽象传播，而非细致到可以“一招鲜吃遍天”的具体代码。</p> <h2 id="贫血模型充血模型">贫血模型、充血模型</h2> <p>本着说话就要说完的原则，我还是决定在此章加入这一小节。主要是因为领域驱动模型中重要的宏观架构到“领域的划分”、“限界上下文”，细微业务逻辑到“事件”、“聚合”、“命令”等。然而在通常开发过程中Java的Spring框架、Golang的Beggo框架，大多在有意无意暗示开发者使用<strong>贫血模式</strong>，在平常项目后端我们一般使用三层架构进行业务开发：Repository + Entity、Service + BO（Business Object）、Controller + VO（View Object），Entity类和Repository类负责数据访问， Bo类和Service类负责处理业务逻辑， Vo类和Controller类属于接口层。（估计某些简单项目甚至连到这一步细分都没有）</p> <p><strong>贫血模式</strong>其最直观的表现就在于：领域对象里中只有GET和SET方法，至于业务逻辑都塞入Service类中，对象BO类中的所有属性就只是用来做数据库和真实世界的数据之间的传递介质。</p> <pre><code class="language-java">@Data public class TicketBO {     //单个订单的商品形成的Set集合，参考淘宝购物车勾选多个商品后合计支付的订单     private Set&lt;Order&gt; orders;     //所有价格     private BigDecimal realAmount;     //优惠     private BigDecimal discounts;     //订单创建时间     private LocalDateTime orderCreateTime;     //修改订单     private LocalDateTime orderChangeTime;     //订单完成时间     private LocalDateTime finishCreateTime; }</code></pre> <p>而在<strong>充血模式</strong>下数据和对应的业务逻辑被封装到对象类中，Service层仅负责业务逻辑与存储之间的流程编排（从DB中获取数据，传递数据，最后存储数据），并不参与任何的业务逻辑。在以下代码里，我将用户未优惠下的支付金额与实际支付金额的业务计算直接置入类中，形成典型的面向对象编程风格。</p> <pre><code class="language-java">@Data public class TicketBO {     //单个订单的商品形成的Set集合，参考淘宝购物车勾选多个商品后合计支付的订单     private Set&lt;Order&gt; orders;     //所有价格     private BigDecimal realAmount;     //优惠扣减价格     private BigDecimal discounts;     //订单创建时间     private LocalDateTime orderCreateTime;     //修改订单     private LocalDateTime orderChangeTime;     //订单完成时间     private LocalDateTime finishCreateTime;      //未使用优惠券情况下应付应付总额     public BigDecimal getAllAmount(){         return orders.stream().map(Order::getPrice).reduce(BigDecimal.ZERO,BigDecimal::add);     }      //使用优惠券后实际应付总额     public BigDecimal getRealAmount(){         BigDecimal allAmount = getAllAmount();         return allAmount.subtract(discounts);     } }</code></pre> <p>读者可能会产生疑问，这两种开发模式落实到代码层面，区别不就是一个将业务逻辑放到 Service 类中，一个将业务逻辑放到 Domain 领域模型（上面的BO类）中吗？为什么基于贫血模型的传统开发模式，就不能应对复杂业务系统的开发？</p> <p>实际上，除了我们能看到的代码层面的区别之外（一个业务逻辑放到 Service 层，一个放到领域模型中），还有一个非常重要的区别，那就是两种不同的开发模式会导致不同的开发流程。</p> <p>传统的代码业务流程开发中，很多程序员最终面向的不过是CRUD编程，即在Service类中将数据处理好后存储到数据库中。拿以上图代码为例进行假设：我们要让用户支付的金额包括邮费，如果采用的时<strong>贫血模式</strong>那我们可以直接在BO中添加一个邮费属性。但是到修改Service类时，我们就得对先前每一个涉及金额的计算代码块（秒杀节日订单、正常购买订单、预约购买订单）重写里面的的金额计算方式，这不仅降低了复用性，后期随着业务拓展也更容易陷入“牵一发动全身”的泥沼中。</p> <p>而采用基于DDD的<strong>充血模式</strong>时，因为预先定义好了领域模型所包含的属性和方法，此后的领域模型相当于可复用的业务中间层。当出现新功能需求的开发，都基于之前定义好的这些领域模型来完成。还是新增邮费属性，我们可以直接在BO类中编写计算出添加邮费后的实际应付总额，而所涉及金额的Service类基本可以不做任何变更。</p> <h2 id="领域事件的订阅发布">领域事件的订阅/发布</h2> <p>上一小节已经对贫血模式、充血模式做了举例说明，下面我将会以充血模式为基础编写一个很基础的下单的业务逻辑。</p> <h3 id="何为领域事件">何为领域事件？</h3> <p>既然被称之为<strong>事件</strong>，那事件的发生必定是存在触发条件的：因为A的产生所以需要变更B。这个概念希望各位能够切记，以免与后面才讲的<strong>命令</strong>混淆。</p> <p>发布领域事件并非任何时候都是必要的，一是在发生重大变更或时才应该发布领域事件，二是在聚合在被创建时才应该发布领域事件。</p> <p>如何判断是否属于重大变更，拿以下两个例子对比：</p> <p>①餐馆菜单菜品变更导致食材库需要更换购买的食材；</p> <p>②餐馆菜单价格涨价导致用户购买时需要多支付金额；</p> <p>对于①来说菜单与食材库是两个独立的<strong>聚合</strong>，而食材库无法自动感知菜单菜品是否发生变化（你修改菜单菜品数据库数据是无法影响食材库的数据库数据），所以在不主动通知的情况下，食材库就会一直按照原本的食材单购买原材料。因此当菜单菜品发生变更，从业务上来说会出现 Menu Change 事件，而 Menu Change 事件发生过程中一定需要创建新的 Menu 对象，此外业务上影响了食材 Ingredient 聚合，所以需要发布领域事件。</p> <p>对于②来说菜单价格的降涨会同步影响到订单应支付金额，不需要手动再去提醒订单“菜单涨价了，你也要跟着再计算一次价格哦”，因为对于订单金额来说只要根据用户下单的菜品查询数据库的价格后求和便可，根本不必时刻关注价格是否变动。</p> <p>那价格增降什么时候需要事件发布呢？各位可以参考京东或淘宝的“降价短信提醒”功能。因为商品与短信功能时两个独立的<strong>聚合</strong>，短信模块在数据层面上无法自动感知商品价格的变动，所以就需要商品价格主动发布领域事件告诉短信模块你要发送通知短信告诉用户订阅的商品降价了。从业务上来说就出现了 Commodity Change 事件，而 Commodity Change 的发生才会触发短信的发送。</p> <p>综上，我用了大量的篇幅对何时需要领域事件发布进行解释，主要希望各位不要错以为任何发生变动的情况都要进行发布，希望各位能够谅解我的啰嗦。</p> <p>接下来我将会以“用户预约时间对商品进行下单支付，当预约时间到了后通知订单自动创建”为例，编写一段简陋的事件订阅/发布代码让各位能够进一步理解事件订阅/发布的过程。</p> <h3 id="具体代码">具体代码</h3> <p>注意：领域事件遵从的是<strong>订阅/发布</strong>而不是<strong>发布/接收</strong>。曾经我在阅读理解这一块知识的时候很想当然地误解了字面含义，它们最大的区别是顺序问题，前者是先订阅再发布，而后者是先发布再接收。我并非是为了咬文嚼字，这其中细微的差距希望各位能够多读几遍并结合代码才能领悟得到。</p> <p>编写事件订阅代码：</p> <pre><code class="language-java">public interface DomainEventSubscriber&lt;T&gt; {    //如何处理事件     void handleEvent(final T aDomainEvent);    //订阅事件类型     Class&lt;T&gt; subscribedToEventType(); }</code></pre> <p>编写事件发布代码：</p> <pre><code class="language-java">public class DomainEventPublisher {     private static final ThreadLocal&lt;DomainEventPublisher&gt; instance = new ThreadLocal&lt;DomainEventPublisher&gt;() {         @Override         protected DomainEventPublisher initialValue() {             return new DomainEventPublisher();         }     };      //做一个判断是否正在发布     private boolean publishing;      //订阅方列表     @SuppressWarnings("rawtypes")     private List subscribers;      public static DomainEventPublisher instance() {         DomainEventPublisher domainEventPublisher = instance.get();         return domainEventPublisher;     }      @SuppressWarnings("rawtypes")     private List subscribers() {         return this.subscribers;     }      //设置发布状态     private void setPublishing(boolean flag) {         this.publishing = flag;     }      @SuppressWarnings("rawtypes")     private void setSubscribers(List subscriberList) {         this.subscribers = subscriberList;     }      //查看当前是否有订阅集合     @SuppressWarnings("rawtypes")     public boolean hasSubscribers() {         return subscribers() != null;     }      //如果当前订阅集合为空则创建一个新的集合     @SuppressWarnings("rawtypes")     private void ensureSubscribersList() {         if (!this.hasSubscribers()) {             this.setSubscribers(new ArrayList());         }     }      //如果当前没有在进行发布，则进行订阅集合判断后将新的订阅者加入集合列表     @SuppressWarnings("unchecked")     public &lt;T&gt; void subscribe(DomainEventSubscriber&lt;T&gt; aSubscriber) {         if (!this.publishing) {             this.ensureSubscribersList();             this.subscribers().add(aSubscriber);         }     }      //此处的&lt;T&gt; 表示传入参数有泛型,&lt;T&gt;存在的作用，是为了保证参数中能够出现T这种数据类型     public &lt;T&gt; void publish(T useDomainEvent) {         //如果没有正在发布消息同时候订阅列表不为空         if (!this.publishing &amp;&amp; hasSubscribers()) {             try {                 this.setPublishing(true);                 //获取当前正在发布消息的领域事件类名                 Class&lt;?&gt; publishClass = useDomainEvent.getClass();                 //获取当前所有订阅者                 List&lt;DomainEventSubscriber&lt;T&gt;&gt; allSubscribers = this.subscribers();                 //遍历所有订阅者列表                 for (DomainEventSubscriber&lt;T&gt; subscriber : allSubscribers) {                     //返回对应的领域事件类                     Class&lt;T&gt; subscribedToType = subscriber.subscribedToEventType();                     //如果发布的领域事件类型与订阅列表的类型匹配上，则将事件交给对应的处理器进行处理                     if (subscribedToType.toString().equals(publishClass.toString()) ) {                         subscriber.handleEvent(useDomainEvent);                     }                 }             }finally {                 //处理完后告知发布消息事件已经结束                 this.setPublishing(false);             }         }     } }</code></pre> <p>领域事件一般包括元数据，例如事件ID和时间戳，为了便于拓展先简单订阅领域事件的接口：</p> <pre><code class="language-java">//定义领域事件接口 public interface DomainEvent {     String id();      Date occurredOn();      default Date getCreatEventTime(){         return occurredOn();     }      default String type(){         return getClass().getSimpleName();     }      default String getType(){         return type();     } }</code></pre> <p>根据聚合编写与聚合相关的事件：</p> <pre><code class="language-java">@Data public abstract class TicketDomainEvent implements DomainEvent{     //补充到聚合根信息中     private String orderId;      private Date occurredOn;      @Override     public String id() {         return this.orderId;     }      @Override     public Date occurredOn() {         return this.occurredOn;     } }</code></pre> <p>根据具体业务的需求和上下文环境定制特定的事件：</p> <pre><code class="language-java">//在订单创建时可以根据现实需求补充上下文信息,如果没有为空就可以 @Data public class CustomerTicketCreateEvent extends TicketDomainEvent {     //基础订单信息     private Ticket ticket;      //面向客户的订单信息，额外添加收获地址     private String address;      public CustomerTicketCreateEvent(Ticket ticket, String address){         this.address = address;         this.ticket = ticket;     } }</code></pre> <p>充血模式下的对象实体类：</p> <pre><code class="language-java">@Data public class Ticket {     //实际应支付价格     private BigDecimal realAmount;     //优惠     private BigDecimal discounts;     private Set&lt;Order&gt; orders;     //订单创建时间     private LocalDateTime orderCreateTime;     //修改订单     private LocalDateTime orderChangeTime;     //订单完成时间     private LocalDateTime finishCreateTime;      //未优惠情况下应付应付总额     public BigDecimal getAllAmount(){         return orders.stream().map(Order::getPrice).reduce(BigDecimal.ZERO,BigDecimal::add);     }      //价格优惠后实际应付总额     public BigDecimal getRealAmount(){         BigDecimal allAmount = getAllAmount();         return allAmount.subtract(discounts);     } }</code></pre> <p>我们在这里做一个业务假设，例如预约购买，一旦某件商品上线，就通知我们自动创建订单进行支付，模拟Service的伪代码：</p> <pre><code class="language-java">//模拟MVC三层模型中的Service public class BuyService {     //预定服务，定时任务到了，发布创建订单的事件     public void reservation(Ticket ticket){         Ticket ticket = new Ticket();         //优惠价格         ticket.setDiscounts(new BigDecimal(20));         //收获地址         String address = "M78星云光之国成化大道消防队对面";          DomainEventPublisher.instance().publish(new CustomerTicketCreateEvent(ticket,address));     } }</code></pre> <p>订单自动创建模拟Service的伪代码：</p> <pre><code class="language-java">public class TicketService {     public void saveTicket(){         DomainEventPublisher.instance().subscribe(new DomainEventSubscriber&lt;CustomerTicketCreateEvent&gt;() {              @Override             public void handleEvent(CustomerTicketCreateEvent domainEvent) {                 System.out.println("收货地址是:"+ domainEvent.getAddress());                 System.out.println("goods was purchased");                 //将顶到保存到数据库,可以增加与db数据库的增删查改操作                 System.out.println("db has save!!");             }              @Override             public Class&lt;CustomerTicketCreateEvent&gt; subscribedToEventType() {                 return CustomerTicketCreateEvent.class;             }         });     } }</code></pre> <p>可以看到上面的TicketService类中并未对数据进行更多的逻辑处理，只负责业务逻辑与存储之间的流程编排，充血模式使得各个层级负责的业务分明。（至于BuyService因为要模拟发布方，所以就没有遵从）。</p> <p>最后还记得我上面说的，先订阅再发布吗？以下就很明显地体现出来：</p> <pre><code class="language-java">@SpringBootTest class DrivenApplicationTests {      @Test     void contextLoads() {         //先注册订阅列表，再进行发布。顺序颠倒控制台显示为空         TicketService ticketService = new TicketService();         ticketService.saveTicket();          BuyService buyService = new BuyService();         buyService.reservation();     } }</code></pre> <p>GitHub源码：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/1148973713/Domain-Driven"  target="_blank" rel="nofollow">https://github.com/1148973713/Domain-Driven</a></p> <h2 id="结语">结语</h2> <p>本博主编程水平一般，不能在闲余时间编写特别复杂的业务流程向各位一一详解领域事件发布/订阅的流程，我希望通过简单明了的案例让各位不陷入代码理解困难的情况下窥得进入领域驱动设计的门槛，如果有什么意见或建议希望各位能够在评论区指出。后续应该会更新Saga事务一致性相关的内容，希望各位持续关注并耐心等待。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-30141.htm">中牧生物有限公司疫苗肺祥的使用（中牧兽用疫苗代理）</a></p>
                                        <p>下一个：<a href="/news/article-30618.htm">奶猫有跳蚤怎么办（奶猫身上的跳蚤会传染到人身上吗）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-high-speed-nodes.htm" title="「12月5日」最高速度21.5M/S，2024年Nekoray每天更新免费节点订阅链接">「12月5日」最高速度21.5M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-2-node-share-links.htm" title="「11月2日」最高速度18.2M/S，2024年Nekoray每天更新免费节点订阅链接">「11月2日」最高速度18.2M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-26409.htm" title="宠物鲜粮市场营销策略分析报告（宠物鲜粮市场营销策略分析报告怎么写）">宠物鲜粮市场营销策略分析报告（宠物鲜粮市场营销策略分析报告怎么写）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-13-free-subscribe-node.htm" title="「9月13日」最高速度21M/S，2024年Nekoray每天更新免费节点订阅链接">「9月13日」最高速度21M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-20-free-high-speed-nodes.htm" title="「9月20日」最高速度23M/S，2024年Nekoray每天更新免费节点订阅链接">「9月20日」最高速度23M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-free-high-speed-nodes.htm" title="「11月27日」最高速度18.7M/S，2024年Nekoray每天更新免费节点订阅链接">「11月27日」最高速度18.7M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-22-free-node-subscribe-links.htm" title="「10月22日」最高速度19M/S，2024年Nekoray每天更新免费节点订阅链接">「10月22日」最高速度19M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-20-free-node-subscribe-links.htm" title="「10月20日」最高速度20.8M/S，2024年Nekoray每天更新免费节点订阅链接">「10月20日」最高速度20.8M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-free-high-speed-nodes.htm" title="「11月16日」最高速度20.8M/S，2024年Nekoray每天更新免费节点订阅链接">「11月16日」最高速度20.8M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-26-free-subscribe-node.htm" title="「9月26日」最高速度22.2M/S，2024年Nekoray每天更新免费节点订阅链接">「9月26日」最高速度22.2M/S，2024年Nekoray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">77</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- about end -->
            <!-- footer start -->
<footer class="footer-area">
    <div class="footer-bottom-area">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Free Nekoray官方节点站</a> 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- footer end -->
<!-- jquery
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/vendor/jquery-1.12.4.min.js"></script>
<!-- bootstrap JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/bootstrap.min.js"></script>
<!-- meanmenu JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.meanmenu.js"></script>
<!-- wow JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/wow.min.js"></script>
<!-- owl.carousel JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/owl.carousel.min.js"></script>
<!-- scrollUp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.scrollUp.min.js"></script>
<!-- Counter up js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.counterup.min.js"></script>
<script src="/assets/website/js/frontend/freenekoray/waypoints.min.js"></script>
<!-- Video Player JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.mb.YTPlayer.js"></script>
<!-- AJax Chimp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.ajaxchimp.min.js"></script>
<!-- plugins JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/plugins.js"></script>
<!-- Nevo Slider js
        ============================================ -->
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/js/jquery.nivo.slider.js"></script>
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/home.js"></script>
<!-- Slick js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/slick.min.js"></script>
<!--Circle chart js-->
<script src="/assets/website/js/frontend/freenekoray/jquery.circliful.min.js"></script>
<!--Venobox js-->
<script src="/assets/website/js/frontend/freenekoray/venobox.min.js"></script>
<!-- Isotope js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/isotope.pkgd.min.js"></script>
<!-- textillate js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.textillate.js"></script>
<script src="/assets/website/js/frontend/freenekoray/jquery.lettering.js"></script>
<!-- animated headline js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/animate-heading.js"></script>
<!-- ajax js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/ajax-mail.js"></script>
<!-- main JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/styleswitch.js"></script>
<script src="/assets/website/js/frontend/freenekoray/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
        </div>
    </div>
</body>

</html>