<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freenekoray.github.io/news/article-89341.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>通过make生成执行文件的过程详解_在线工具</title>
        <meta name="description" content="lab_0 清华大学ucore实验环境配置详细步骤！（小白入） lab_1 清华大学ucore bootload启动ucore os（预备知识） Lab_1：练习1——理解通过make生成执行文件的过" />
        <link rel="icon" href="/assets/website/img/freenekoray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Nekoray官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freenekoray.github.io/news/article-89341.htm" />
    <meta property="og:site_name" content="Free Nekoray官方节点站" />
    <meta property="og:title" content="通过make生成执行文件的过程详解_在线工具" />
    <meta property="og:image" content="https://freenekoray.github.io/uploads/20240725/2308ed4888db9d5fe138455da67f586b.webp" />
        <meta property="og:release_date" content="2025-04-06T10:04:34" />
    <meta property="og:updated_time" content="2025-04-06T10:04:34" />
        <meta property="og:description" content="lab_0 清华大学ucore实验环境配置详细步骤！（小白入） lab_1 清华大学ucore bootload启动ucore os（预备知识） Lab_1：练习1——理解通过make生成执行文件的过" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="通过make生成执行文件的过程详解_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/bootstrap.min.css">
    <!-- Nivo slider CSS
        ============================================ -->
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/freenekoray/custom-slider/css/nivo-slider.css" media="screen" />
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/freenekoray/custom-slider/css/preview.css" media="screen" />
    <!-- Fontawsome CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/font-awesome.min.css">
    <!-- Flaticon CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/flaticon.css">
    <!-- material iconic CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.min.css">
    <!-- owl.carousel CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/owl.carousel.css">
    <!-- jquery-ui CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery-ui.css">
    <!-- meanmenu CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/meanmenu.min.css">
    <!-- animate CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate.css">
    <!-- Slick CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/slick.css">
    <!-- Venobox CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/venobox.css">
    <!-- Circle Chart CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.circliful.css">
    <!-- Color Switcher CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color-switcher.css">
    <!-- Animate headline CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate-heading.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/reset.css">
    <!-- Video CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.mb.YTPlayer.css">
    <!-- style CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/style.css">
    <!-- Responsive CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/responsive.css">
    <!-- Modernizr JS
        ============================================ -->
    <script src="/assets/website/js/frontend/freenekoray/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Color Css Files Start -->
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-one.css" title="color-one" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-two.css" title="color-two" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-three.css" title="color-three" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-four.css" title="color-four" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-five.css" title="color-five" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-six.css" title="color-six" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-seven.css" title="color-seven" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-eight.css" title="color-eight" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-nine.css" title="color-nine" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren1.css" title="pattren1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren2.css" title="pattren2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren3.css" title="pattren3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren4.css" title="pattren4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren5.css" title="pattren5" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background1.css" title="background1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background2.css" title="background2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background3.css" title="background3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background4.css" title="background4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background5.css" title="background5" media="screen" />
    <!-- Color Css Files End -->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-CZ0BL8Q290"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-CZ0BL8Q290');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Pre Loader
    ============================================ -->
    <div class="preloader">
        <div class="loading-center">
            <div class="loading-center-absolute">
                <div class="object object_one"></div>
                <div class="object object_two"></div>
                <div class="object object_three"></div>
            </div>
        </div>
    </div>
    <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->
    <div class="as-mainwrapper">
        <!-- header start -->
<header class="header-area">
    <div class="main-header-area bg-white sticker">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-md-2 col-sm-6 col-xs-12">
                    <div class="logo">
                        <a href="/">
                                                <span>Free Nekoray</span>
                                                </a>
                    </div>
                </div>
                <div class="col-lg-7 col-md-8 hidden-sm hidden-xs">
                    <div class="mainmenu-area">
                        <div class="mainmenu">
                            <nav>
                                <ul id="nav">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area start -->
    <div class="mobile-menu-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="mobile-menu">
                        <nav id="dropdown">
                            <ul>
                                                                <li><a href="/">首页</a>
                                                                    <li><a href="/free-nodes/">免费节点</a>
                                                                    <li><a href="/paid-subscribe/">推荐机场</a>
                                                                    <li><a href="/client.htm">客户端</a>
                                                                    <li><a href="/news/">新闻资讯</a>
                                                                </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area end -->
</header>
<!-- header end -->
        <div class="main-content-wrapper">
            <!-- banner start -->
            <div class="banner-area blog">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="banner-text text-center">
                                <div class="banner-title">
                                    <h1>通过make生成执行文件的过程详解_在线工具</h1>
                                </div>
                                <div class="breadcrumbs">
                                    <ul>
                                        <li><a href="/">首页</a>></li>
                                        <li><a href="/news/">新闻资讯</a>></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- banner end -->
            <!-- about start-->
            <div class="about-reflex-area bg-white bg-white ptb-100">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h3 id="lab_0-清华大学ucore实验环境配置详细步骤小白入"><strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/450go/p/16211900.html"  target="_blank" rel="nofollow">lab_0 清华大学ucore实验环境配置详细步骤！（小白入）</a></strong></h3> <h3 id="lab_1-清华大学ucore-bootload启动ucore-os预备知识"><strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/450go/p/16214166.html"  target="_blank" rel="nofollow">lab_1 清华大学ucore bootload启动ucore os（预备知识）</a></strong></h3> <h4 id="lab_1练习1理解通过make生成执行文件的过程"><strong><a href="" rel="nofollow">Lab_1：练习1——理解通过make生成执行文件的过程</a></strong></h4> <h2 id="练习一理解通过make生成执行文件的过程">练习一：理解通过make生成执行文件的过程。</h2> <blockquote> <p>列出本实验各练习中对应的OS原理的知识点，并说明本实验中的实现部分如何对应和体现了原理中的基本概念和关键知识点。</p> <p>在此练习中，大家需要通过静态分析代码来了解：</p> <ol> <li>操作系统镜像文件ucore.img是如何一步一步生成的？(需要比较详细地解释Makefile中每一条相关命令和命令参数的含义，以及说明命令导致的结果)</li> <li>一个被系统认为是符合规范的硬盘主引导扇区的特征是什么？</li> </ol> <p>补充材料：</p> <p>如何调试Makefile</p> <p>当执行make时，一般只会显示输出，不会显示make到底执行了哪些命令。</p> <p>如想了解make执行了哪些命令，可以执行：</p> <pre><code>$ make "V="</code></pre> <p>要获取更多有关make的信息，可上网查询，并请执行</p> <pre><code>$ man make</code></pre> </blockquote> <h3 id="一操作步骤"><strong>一、操作步骤</strong></h3> <p>1、输入make clean，删掉上次的make命令所产生的object文件（后缀为“.o”的文件）及可执行文件</p> <pre><code>myliuxb@myliuxb-virtual-machine:~/ucore/labcodes_answer/lab1_result$ make clean rm -f -r obj bin</code></pre> <p>2、输入make V=这实际就是设置一个标记，使得make它的执行过程能够展现出来。能够知道Bootloader和ucore是如何一步步生成的。</p> <pre><code>myliuxb@myliuxb-virtual-machine:~/ucore/labcodes_answer/lab1_result$ make V= + cc kern/init/init.c i386-elf-gcc -Ikern/init/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/init/init.c -o obj/kern/init/init.o + cc kern/libs/stdio.c i386-elf-gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/stdio.c -o obj/kern/libs/stdio.o + cc kern/libs/readline.c i386-elf-gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/readline.c -o obj/kern/libs/readline.o + cc kern/debug/panic.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/panic.c -o obj/kern/debug/panic.o + cc kern/debug/kdebug.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kdebug.c -o obj/kern/debug/kdebug.o + cc kern/debug/kmonitor.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kmonitor.c -o obj/kern/debug/kmonitor.o + cc kern/driver/clock.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/clock.c -o obj/kern/driver/clock.o + cc kern/driver/console.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/console.c -o obj/kern/driver/console.o + cc kern/driver/picirq.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/picirq.c -o obj/kern/driver/picirq.o + cc kern/driver/intr.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/intr.c -o obj/kern/driver/intr.o + cc kern/trap/trap.c i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trap.c -o obj/kern/trap/trap.o + cc kern/trap/vectors.S i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/vectors.S -o obj/kern/trap/vectors.o + cc kern/trap/trapentry.S i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trapentry.S -o obj/kern/trap/trapentry.o + cc kern/mm/pmm.c i386-elf-gcc -Ikern/mm/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/mm/pmm.c -o obj/kern/mm/pmm.o + cc libs/string.c i386-elf-gcc -Ilibs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c libs/string.c -o obj/libs/string.o + cc libs/printfmt.c i386-elf-gcc -Ilibs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c libs/printfmt.c -o obj/libs/printfmt.o + ld bin/kernel i386-elf-ld -m    elf_i386 -nostdlib -T tools/kernel.ld -o bin/kernel  obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o  obj/libs/string.o obj/libs/printfmt.o + cc boot/bootasm.S i386-elf-gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootasm.S -o obj/boot/bootasm.o + cc boot/bootmain.c i386-elf-gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootmain.c -o obj/boot/bootmain.o + cc tools/sign.c gcc -Itools/ -g -Wall -O2 -c tools/sign.c -o obj/sign/tools/sign.o gcc -g -Wall -O2 obj/sign/tools/sign.o -o bin/sign + ld bin/bootblock i386-elf-ld -m    elf_i386 -nostdlib -N -e start -Ttext 0x7C00 obj/boot/bootasm.o obj/boot/bootmain.o -o obj/bootblock.o 'obj/bootblock.out' size: 500 bytes build 512 bytes boot sector: 'bin/bootblock' success! dd if=/dev/zero of=bin/ucore.img count=10000 记录了10000+0 的读入 记录了10000+0 的写出 5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.0416907 s, 123 MB/s dd if=bin/bootblock of=bin/ucore.img conv=notrunc 记录了1+0 的读入 记录了1+0 的写出 512 bytes copied, 0.000462614 s, 1.1 MB/s dd if=bin/kernel of=bin/ucore.img seek=1 conv=notrunc 记录了146+1 的读入 记录了146+1 的写出 74844 bytes (75 kB, 73 KiB) copied, 0.000676749 s, 111 MB/s</code></pre> <h3 id="二问题一操作系统镜像文件ucoreimg是如何一步一步生成的"><strong>二、问题一：操作系统镜像文件ucore.img是如何一步一步生成的？</strong></h3> <blockquote> <p>问题：操作系统镜像文件ucore.img是如何一步一步生成的？(需要比较详细地解释Makefile中每一条相关命令和命令参数的含义，以及说明命令导致的结果)</p> </blockquote> <h4 id="1大概流程"><strong>1.大概流程</strong></h4> <p>1.在下图代码中可以看到它调用了gcc，把C的源代码编译成了所谓的.o文件，是目标文件。通过查看make的执行过程，可以发现将项目中的kern和libs boot中的C文件都编译成.o文件</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/6aeb4b48f9063aa60ad260bc72fa2f6a.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/991664827226250331dc9b7d4b2139c8.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p>最后生成的.o文件全部存在obj文件夹中</p> <p>2.然后通过ld会把这些目标文件转换成 像下面bootblock.out这样的可执行文件，可以理解为是bootloader一个执行程序（后文bootblock和bootloader其实是一个意思）</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/2fb02b4510b7c6445962fd2b89cec8a9.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p>3.dd命令可以把bootloader放到一个虚拟的硬盘里面去，在这里生成一个虚拟硬盘叫ucore.img 然后我们的硬件模拟器就会基于这个虚拟硬盘中的数据来执行相应的代码。把bootloader放到ucore.img的虚拟硬盘中</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/280b66c2b10b67b2904d5d6bf00015c8.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p>4.我们可以看到最后生成两个软件，第一个是kernel，第二个叫Bootloader，kernel实际上是ucore的组成部分。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/15b9bdbf1aec6c5f8eca172828c390b4.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/3135e01a20deb2c199755570c0068889.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p>其实如何生成这两个文件是取决于Makefile文件，但是这个文件比较复杂，其实只要关注到底用了哪些.C程序来最后生成Bootloader和ucore就够了。</p> <h4 id="2具体分析这里参考另一个博主"><strong>2.具体分析：（这里参考另一个<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/cyx-b/p/11750020.html"  target="_blank" rel="nofollow">博主</a>）</strong></h4> <p>需要生成ucore.img首先需要生成bootblock，而生成bootblock需要先生成bootmain.o和bootasm.o还有sign.o</p> <pre><code>+ ld bin/kernel ld -m    elf_i386 -nostdlib -T tools/kernel.ld -o bin/kernel  obj/kern/init/init.o obj/kern/libs/readline.o obj/kern/libs/stdio.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/debug/panic.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/intr.o obj/kern/driver/picirq.o obj/kern/trap/trap.o obj/kern/trap/trapentry.o obj/kern/trap/vectors.o obj/kern/mm/pmm.o  obj/libs/printfmt.o obj/libs/string.o</code></pre> <p>ld将.o文件整合成可执行文件kernel，而这些.o文件是Makefile文件通过命令使用gcc把有关kernel的.c文件编译生成</p> <pre><code>+ ld bin/bootblock ld -m    elf_i386 -nostdlib -N -e start -Ttext 0x7C00 obj/boot/bootasm.o obj/boot/bootmain.o -o obj/bootblock.o 'obj/bootblock.out' size: 488 bytes build 512 bytes boot sector: 'bin/bootblock' success!</code></pre> <p>同理ld也将.o文件整合成可执行文件bootblock，大小为488字节,但还是放入512字节扇区中，但是，而这些.o文件也是Makefile文件通过命令使用gcc把有关bootloader的.c文件编译生成</p> <pre><code>dd if=/dev/zero of=bin/ucore.img count=10000 10000+0 records in 10000+0 records out 5120000 bytes (5.1 MB) copied, 0.0601803 s, 85.1 MB/s</code></pre> <p>创建10000块扇区，每个扇区512字节，制成ucore.img虚拟磁盘</p> <pre><code>dd if=bin/bootblock of=bin/ucore.img conv=notrunc 1+0 records in 1+0 records out 512 bytes (512 B) copied, 0.000141238 s, 3.6 MB/s</code></pre> <p>将bootblock存到ucore.img虚拟磁盘的第一块</p> <pre><code>dd if=bin/kernel of=bin/ucore.img seek=1 conv=notrunc 146+1 records in 146+1 records out 74923 bytes (75 kB) copied, 0.00356787 s, 21.0 MB/s</code></pre> <p>将kernel存到ucore.img虚拟磁盘的第二块及之后几块，注意seek1，最终ucore.img虚拟磁盘制作完成</p> <h4 id="3分析makefile文件"><strong>3.分析Makefile文件</strong></h4> <p>之前有总结过关于Makefile的规则，在第三节https://www.cnblogs.com/450go/p/16019887.html</p> <p>Makefile文件中，可以看到对应的生成ucore.img的过程及相应语句如下：</p> <pre><code># create ucore.img UCOREIMG	:= $(call totarget,ucore.img)  $(UCOREIMG): $(kernel) $(bootblock) 	$(V)dd if=/dev/zero of=$@ count=10000 	$(V)dd if=$(bootblock) of=$@ conv=notrunc 	$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc  $(call create_target,ucore.img)</code></pre> <p>逐条分析：</p> <p><strong><code>$(kernel)</code></strong>：生成kernel。需要以下两步</p> <p><strong>1.编译kern/目录下的C程序，生成kernel需要的.o文件</strong></p> <p>$(call add_files_cc,$(call listf_cc,$(KSRCDIR)),kernel,$(KCFLAGS))</p> <p>实际执行的命令为：</p> <pre><code>+ cc kern/init/init.c i386-elf-gcc -Ikern/init/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/init/init.c -o obj/kern/init/init.o + cc kern/libs/stdio.c i386-elf-gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/stdio.c -o obj/kern/libs/stdio.o + cc kern/libs/readline.c i386-elf-gcc -Ikern/libs/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/libs/readline.c -o obj/kern/libs/readline.o + cc kern/debug/panic.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/panic.c -o obj/kern/debug/panic.o + cc kern/debug/kdebug.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kdebug.c -o obj/kern/debug/kdebug.o + cc kern/debug/kmonitor.c i386-elf-gcc -Ikern/debug/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/debug/kmonitor.c -o obj/kern/debug/kmonitor.o + cc kern/driver/clock.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/clock.c -o obj/kern/driver/clock.o + cc kern/driver/console.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/console.c -o obj/kern/driver/console.o + cc kern/driver/picirq.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/picirq.c -o obj/kern/driver/picirq.o + cc kern/driver/intr.c i386-elf-gcc -Ikern/driver/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/driver/intr.c -o obj/kern/driver/intr.o + cc kern/trap/trap.c i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trap.c -o obj/kern/trap/trap.o + cc kern/trap/vectors.S i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/vectors.S -o obj/kern/trap/vectors.o + cc kern/trap/trapentry.S i386-elf-gcc -Ikern/trap/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/trap/trapentry.S -o obj/kern/trap/trapentry.o + cc kern/mm/pmm.c i386-elf-gcc -Ikern/mm/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c kern/mm/pmm.c -o obj/kern/mm/pmm.o</code></pre> <p><strong>2.链接这些.o文件，生成kernel</strong></p> <pre><code># create kernel target kernel = $(call totarget,kernel)  $(kernel): tools/kernel.ld  $(kernel): $(KOBJS) 	@echo + ld $@ 	$(V)$(LD) $(LDFLAGS) -T tools/kernel.ld -o $@ $(KOBJS) 	@$(OBJDUMP) -S $@ &gt; $(call asmfile,kernel) 	@$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' &gt; $(call symfile,kernel)</code></pre> <p>执行的实际命令为：</p> <pre><code>+ ld bin/kernel ld -m    elf_i386 -nostdlib -T tools/kernel.ld -o bin/kernel  obj/kern/init/init.o obj/kern/libs/readline.o obj/kern/libs/stdio.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/debug/panic.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/intr.o obj/kern/driver/picirq.o obj/kern/trap/trap.o obj/kern/trap/trapentry.o obj/kern/trap/vectors.o obj/kern/mm/pmm.o  obj/libs/printfmt.o obj/libs/string.o</code></pre> <p><strong><code>$(bootblock)</code>****：</strong>生成bootblock。需要以下三步：</p> <p><strong>1.生成bootmain.o和bootasm.o</strong></p> <pre><code>bootfiles = $(call listf_cc,boot) $(foreach f,$(bootfiles),$(call cc_compile,$(f),$(CC),$(CFLAGS) -Os -nostdinc))</code></pre> <p>执行的实际命令为</p> <pre><code>+ cc boot/bootasm.S gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootasm.S -o         obj/boot/bootasm.o + cc boot/bootmain.c gcc -Iboot/ -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c boot/bootmain.c -o obj/boot/bootmain.o</code></pre> <p><strong>2.编译tools/sign.c，生成sign.o</strong></p> <pre><code># create 'sign' tools $(call add_files_host,tools/sign.c,sign,sign) $(call create_target_host,sign,sign)</code></pre> <p>执行的实际命令为：</p> <pre><code>+ cc tools/sign.c gcc -Itools/ -g -Wall -O2 -c tools/sign.c -o obj/sign/tools/sign.o gcc -g -Wall -O2 obj/sign/tools/sign.o -o bin/sign</code></pre> <p><strong>3.链接以上的.o文件</strong></p> <pre><code>bootblock = $(call totarget,bootblock)  $(bootblock): $(call toobj,$(bootfiles)) | $(call totarget,sign) 	@echo + ld $@ 	$(V)$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 $^ -o $(call toobj,bootblock) 	@$(OBJDUMP) -S $(call objfile,bootblock) &gt; $(call asmfile,bootblock) 	@$(OBJDUMP) -t $(call objfile,bootblock) | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' &gt; $(call symfile,bootblock) 	@$(OBJCOPY) -S -O binary $(call objfile,bootblock) $(call outfile,bootblock) 	@$(call totarget,sign) $(call outfile,bootblock) $(bootblock)  $(call create_target,bootblock)</code></pre> <p>执行的实际命令为：</p> <pre><code>+ ld bin/bootblock ld -m  elf_i386 -nostdlib -N -e start -Ttext 0x7C00 obj/boot/bootasm.o obj/boot/bootmain.o -o obj/bootblock.o</code></pre> <p><code>$(V)dd if=/dev/zero of=$@ count=10000</code>:生成一个有10000个块的文件，每个块默认512字节，用0填充。</p> <p>执行的实际命令为：</p> <pre><code>dd ``if``=/dev/zero of=bin/ucore.img count=10000</code></pre> <p><code>$(V)dd if=$(bootblock) of=$@ conv=notrunc</code>:把bootblock中的内容写到第一个块。</p> <p>执行的实际命令为：</p> <pre><code>dd ``if``=bin/bootblock of=bin/ucore.img conv=notrunc</code></pre> <p><code>$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc</code>：从第二个块开始写kernel中的内容。</p> <p>执行的实际命令为：</p> <pre><code>dd ``if``=bin/kernel of=bin/ucore.img seek=1 conv=notrunc</code></pre> <h3 id="三问题二一个被系统认为是符合规范的硬盘主引导扇区的特征是什么">三、问题二：一个被系统认为是符合规范的硬盘主引导扇区的特征是什么？</h3> <blockquote> <p>引导扇区的大小为512字节，最后两个字节为标志性结束字节0x55，0xAA，做完这样的检查才能认为是符合规范的磁盘主引导扇区。</p> </blockquote> <p>在sign.c文件中，它完成了相应的特征的标记，查看sign.c文件</p> <pre><code class="language-c++">#include &lt;stdio.h&gt; #include &lt;errno.h&gt; #include &lt;string.h&gt; #include &lt;sys/stat.h&gt;  int main(int argc, char *argv[]) {     struct stat st;     if (argc != 3) {         fprintf(stderr, "Usage: &lt;input filename&gt; &lt;output filename&gt;\n");         return -1;     }     if (stat(argv[1], &amp;st) != 0) {         fprintf(stderr, "Error opening file '%s': %s\n", argv[1], strerror(errno));         return -1;     }     printf("'%s' size: %lld bytes\n", argv[1], (long long)st.st_size);     if (st.st_size &gt; 510) {         fprintf(stderr, "%lld &gt;&gt; 510!!\n", (long long)st.st_size);         return -1;     }     char buf[512];     memset(buf, 0, sizeof(buf));     FILE *ifp = fopen(argv[1], "rb");     int size = fread(buf, 1, st.st_size, ifp);     if (size != st.st_size) {         fprintf(stderr, "read '%s' error, size is %d.\n", argv[1], size);         return -1;     }     fclose(ifp);     buf[510] = 0x55;     buf[511] = 0xAA;     FILE *ofp = fopen(argv[2], "wb+");     size = fwrite(buf, 1, 512, ofp);     if (size != 512) {         fprintf(stderr, "write '%s' error, size is %d.\n", argv[2], size);         return -1;     }     fclose(ofp);     printf("build 512 bytes boot sector: '%s' success!\n", argv[2]);     return 0; }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/4117aa180ac9fcf9d5f6ea0ce9e488c7.jpg" alt="通过make生成执行文件的过程详解_在线工具"></p> <p>引导扇区的大小为512字节，最后两个字节为标志性结束字节0x55，0xAA</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-88622.htm">领养宠物赚钱软件是哪个公司的产品（领养宠物赚钱软件是哪个公司的产品呢）</a></p>
                                        <p>下一个：<a href="/news/article-89342.htm">新疆狗狗领养中心电话（新疆流浪狗收养中心）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-75288.htm" title="女人养猫的十大坏处视频播放（女人养猫有什么好处）">女人养猫的十大坏处视频播放（女人养猫有什么好处）</a></li>
                        <li class="py-2"><a href="/news/article-88622.htm" title="领养宠物赚钱软件是哪个公司的产品（领养宠物赚钱软件是哪个公司的产品呢）">领养宠物赚钱软件是哪个公司的产品（领养宠物赚钱软件是哪个公司的产品呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-subscribe-node.htm" title="「3月13日」最高速度20.1M/S，2025年Nekoray每天更新免费节点订阅链接">「3月13日」最高速度20.1M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-79381.htm" title="@Requestbody踩坑">@Requestbody踩坑</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-14-free-node-subscribe-links.htm" title="「3月14日」最高速度20.5M/S，2025年Nekoray每天更新免费节点订阅链接">「3月14日」最高速度20.5M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-free-node-subscribe-links.htm" title="「3月25日」最高速度20.5M/S，2025年Nekoray每天更新免费节点订阅链接">「3月25日」最高速度20.5M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-69978.htm" title="前端面试题：手写用js的函数 实现和instanceof 一样的功能">前端面试题：手写用js的函数 实现和instanceof 一样的功能</a></li>
                        <li class="py-2"><a href="/news/article-71289.htm" title="宠物医院好评100字评论文案（宠物医院好评100字通用评论）">宠物医院好评100字评论文案（宠物医院好评100字通用评论）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-free-high-speed-nodes.htm" title="「3月4日」最高速度23M/S，2025年Nekoray每天更新免费节点订阅链接">「3月4日」最高速度23M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-17-free-node-subscribe-links.htm" title="「3月17日」最高速度18.6M/S，2025年Nekoray每天更新免费节点订阅链接">「3月17日」最高速度18.6M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">22</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- about end -->
            <!-- footer start -->
<footer class="footer-area">
    <div class="footer-bottom-area">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <div class="copyright">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p>
                            <a href="/">Free Nekoray官方节点站</a> 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- footer end -->
<!-- jquery
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/vendor/jquery-1.12.4.min.js"></script>
<!-- bootstrap JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/bootstrap.min.js"></script>
<!-- meanmenu JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.meanmenu.js"></script>
<!-- wow JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/wow.min.js"></script>
<!-- owl.carousel JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/owl.carousel.min.js"></script>
<!-- scrollUp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.scrollUp.min.js"></script>
<!-- Counter up js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.counterup.min.js"></script>
<script src="/assets/website/js/frontend/freenekoray/waypoints.min.js"></script>
<!-- Video Player JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.mb.YTPlayer.js"></script>
<!-- AJax Chimp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.ajaxchimp.min.js"></script>
<!-- plugins JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/plugins.js"></script>
<!-- Nevo Slider js
        ============================================ -->
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/js/jquery.nivo.slider.js"></script>
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/home.js"></script>
<!-- Slick js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/slick.min.js"></script>
<!--Circle chart js-->
<script src="/assets/website/js/frontend/freenekoray/jquery.circliful.min.js"></script>
<!--Venobox js-->
<script src="/assets/website/js/frontend/freenekoray/venobox.min.js"></script>
<!-- Isotope js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/isotope.pkgd.min.js"></script>
<!-- textillate js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.textillate.js"></script>
<script src="/assets/website/js/frontend/freenekoray/jquery.lettering.js"></script>
<!-- animated headline js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/animate-heading.js"></script>
<!-- ajax js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/ajax-mail.js"></script>
<!-- main JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/styleswitch.js"></script>
<script src="/assets/website/js/frontend/freenekoray/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
        </div>
    </div>
</body>

</html>