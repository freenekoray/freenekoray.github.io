<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freenekoray.github.io/news/article-94570.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>源码中的设计模式&#8211;单例模式</title>
        <meta name="description" content="单例模式在众多的设计模式中应该是最简单的一个，但是要掌握的点也不少。先看下《head first 设计模式》中给出的释义，  单件模式确保一个类只有一个实例，并提供一个全局访问点。  &nbsp;下面" />
        <link rel="icon" href="/assets/website/img/freenekoray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Nekoray官方节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freenekoray.github.io/news/article-94570.htm" />
    <meta property="og:site_name" content="Free Nekoray官方节点站" />
    <meta property="og:title" content="源码中的设计模式&#8211;单例模式" />
    <meta property="og:image" content="https://freenekoray.github.io/uploads/20240725/f9215cb2b4c15213bb0b16904f0de9b2.webp" />
        <meta property="og:release_date" content="2025-04-13T07:17:23" />
    <meta property="og:updated_time" content="2025-04-13T07:17:23" />
        <meta property="og:description" content="单例模式在众多的设计模式中应该是最简单的一个，但是要掌握的点也不少。先看下《head first 设计模式》中给出的释义，  单件模式确保一个类只有一个实例，并提供一个全局访问点。  &nbsp;下面" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="源码中的设计模式&#8211;单例模式">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/bootstrap.min.css">
    <!-- Nivo slider CSS
        ============================================ -->
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/freenekoray/custom-slider/css/nivo-slider.css" media="screen" />
    <link rel="stylesheet" type="text/css" href="/assets/website/js/frontend/freenekoray/custom-slider/css/preview.css" media="screen" />
    <!-- Fontawsome CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/font-awesome.min.css">
    <!-- Flaticon CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/flaticon.css">
    <!-- material iconic CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/material-design-iconic-font.min.css">
    <!-- owl.carousel CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/owl.carousel.css">
    <!-- jquery-ui CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery-ui.css">
    <!-- meanmenu CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/meanmenu.min.css">
    <!-- animate CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate.css">
    <!-- Slick CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/slick.css">
    <!-- Venobox CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/venobox.css">
    <!-- Circle Chart CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.circliful.css">
    <!-- Color Switcher CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/color-switcher.css">
    <!-- Animate headline CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/animate-heading.css">
    <link rel="stylesheet" href="/assets/website/css/freenekoray/reset.css">
    <!-- Video CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/jquery.mb.YTPlayer.css">
    <!-- style CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/style.css">
    <!-- Responsive CSS
        ============================================ -->
    <link rel="stylesheet" href="/assets/website/css/freenekoray/responsive.css">
    <!-- Modernizr JS
        ============================================ -->
    <script src="/assets/website/js/frontend/freenekoray/vendor/modernizr-2.8.3.min.js"></script>
    <!-- Color Css Files Start -->
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-one.css" title="color-one" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-two.css" title="color-two" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-three.css" title="color-three" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-four.css" title="color-four" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-five.css" title="color-five" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-six.css" title="color-six" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-seven.css" title="color-seven" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-eight.css" title="color-eight" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-nine.css" title="color-nine" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/color-ten.css" title="color-ten" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren1.css" title="pattren1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren2.css" title="pattren2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren3.css" title="pattren3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren4.css" title="pattren4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/pattren5.css" title="pattren5" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background1.css" title="background1" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background2.css" title="background2" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background3.css" title="background3" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background4.css" title="background4" media="screen" />
    <link rel="alternate stylesheet" type="text/css" href="/assets/website/css/freenekoray/switcher/background5.css" title="background5" media="screen" />
    <!-- Color Css Files End -->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-CZ0BL8Q290"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-CZ0BL8Q290');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Pre Loader
    ============================================ -->
    <div class="preloader">
        <div class="loading-center">
            <div class="loading-center-absolute">
                <div class="object object_one"></div>
                <div class="object object_two"></div>
                <div class="object object_three"></div>
            </div>
        </div>
    </div>
    <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->
    <div class="as-mainwrapper">
        <!-- header start -->
<header class="header-area">
    <div class="main-header-area bg-white sticker">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-md-2 col-sm-6 col-xs-12">
                    <div class="logo">
                        <a href="/">
                                                <span>Free Nekoray</span>
                                                </a>
                    </div>
                </div>
                <div class="col-lg-7 col-md-8 hidden-sm hidden-xs">
                    <div class="mainmenu-area">
                        <div class="mainmenu">
                            <nav>
                                <ul id="nav">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area start -->
    <div class="mobile-menu-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="mobile-menu">
                        <nav id="dropdown">
                            <ul>
                                                                <li><a href="/">首页</a>
                                                                    <li><a href="/free-nodes/">免费节点</a>
                                                                    <li><a href="/paid-subscribe/">推荐机场</a>
                                                                    <li><a href="/client.htm">客户端</a>
                                                                    <li><a href="/news/">新闻资讯</a>
                                                                </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Area end -->
</header>
<!-- header end -->
        <div class="main-content-wrapper">
            <!-- banner start -->
            <div class="banner-area blog">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="banner-text text-center">
                                <div class="banner-title">
                                    <h1>源码中的设计模式&#8211;单例模式</h1>
                                </div>
                                <div class="breadcrumbs">
                                    <ul>
                                        <li><a href="/">首页</a>></li>
                                        <li><a href="/news/">新闻资讯</a>></li>
                                        <li>正文</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- banner end -->
            <!-- about start-->
            <div class="about-reflex-area bg-white bg-white ptb-100">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <p>单例模式在众多的设计模式中应该是最简单的一个，但是要掌握的点也不少。先看下《head first 设计模式》中给出的释义，</p> <blockquote> <p><strong><span style="font-size: 18px">单件模式</span></strong>确保一个类只有一个实例，并提供一个全局访问点。</p> </blockquote> <p>&nbsp;下面对这个释义进行逐字解释。单件可以称之为单例其实是一个意思。这个释义给出了单例模式中重要的两点，</p> <ol> <li>一个类只有一个实例；</li> <li>提供一个全局的访问点；</li> </ol> <p>先说第一条，一个类只有一个实例，在一个系统中会有很多类，如下面的订单类Order</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Order {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderId;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> BigDecimal orderAmount;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderPerson; }</span></pre> </div> <p>那么现在就有一个问题，如何保证一个类只有一个实例，最先想到的是强制要求这个系统中的所有开发人员，在开发的时候只能实例一次，一个人实例化了，另一个人就不能实例化，这是一个办法，但是却不可行，因为我要实例化这个类的时候总不能先问下其他人，你们实例化过没有，只有其他人没有实例化的前提下你才可以实例化，而且你还要告知其他人以后谁都不能再实例化Order了，这样是不是太傻了，并且效率也太低了，纯靠人为约定肯定是行不通了。有没有其他的方法呐，答案是有的。</p> <p>大家都知道，通常情况下实例化一个类，最简单的方式就是new一个，谁说我没有女朋友，new一个啊。现在我们也new一个Order，但是我们发现任何一个人都可以new，这怎么能保证只有一个实例，那么我把它的构造方法设为私有的，这样你们都不能new了吧，能new的只有一个拉，也就是在Order的内部可以new，这就可以保证一个类只有一个实例了，因为只有在类的内部才可以调用其私有的构造方法，其他地方想调用“对不起，您没有访问权限”。</p> <p>好了上面通过把类的构造方法设为私有的，保证了一个类只有一个实例，那么如何才能访问到这个实例呐，假设现在的代码是这样的，</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Order {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderId;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> BigDecimal orderAmount;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderPerson;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 私有的构造方法</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> Order(){              }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 通过私有构造方法生成的唯一实例</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 0, 1)">     Order order</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Order(); }</span></pre> </div> <p>我们现在就要访问到通过私有构造方法生成的实例order，怎么才能访问到呐？提供一个静态方法，静态方法是类级别的，不依赖于实例，可以通过类名.静态方法名的方式访问，如下</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Order {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderId;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> BigDecimal orderAmount;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String orderPerson;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 私有的构造方法</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> Order(){      }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 通过私有构造方法生成的唯一实例</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span> Order order=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Order();</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 全局访问点，静态方法      *</span><span style="color: rgba(128, 128, 128, 1)">@return</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> Order getInstance(){</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> order;     } }</span></pre> </div> <p>通过提供一个静态方法，由静态方法返回该唯一实例，由于静态方法中要引用order实例，所以该实例也必须是静态的，静态方法是公共的，那么order也应设为私有的，这样就提供了一个全局的访问点，任何地方想使用这个唯一实例调用该静态方法即可。</p> <p>&nbsp;好了，到目前为止你已经掌握了一些单例模式的方法。</p> </h1> <p>一般情况下，单例模式分为懒汉和饿汉两种模式，这两种模式很容易记混，我这里有一个好的记忆方式，下面会提到。</p> <p>上面的演示中其实就是饿汉模式，下面看懒汉模式，</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Singleton {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> Singleton singleton;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 全局访问点，提供singleton实例的唯一访问      *</span><span style="color: rgba(128, 128, 128, 1)">@return</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> Singleton getInstance(){</span><span style="color: rgba(0, 0, 255, 1)">if</span>(singleton==<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">){             singleton</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> Singleton();         }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> singleton;     }</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">      * 唯一的私有构造函数，提供唯一的实例</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> Singleton(){              }      }</span></pre> </div> <p>上面便是懒汉模式。</p> <p>对比饿汉模式和懒汉模式，可以发现其区别在于<strong>什么时机调用私有的构造方法生成实例</strong>，区分方式是，<strong>懒汉模式只有在调用全局访问点的时候才会生成实例，而饿汉模式则在类加载的时候便会生成实例</strong>，所以根据生成实例的时机去区分饿汉和懒汉就容易的多了。</p> <p>这里想留几个思考问题，</p> <ol> <li>上面的懒汉模式有问题吗？</li> <li>生成实例的方式除了new还有其他方式吗？</li> </ol> </h1> <p>&nbsp;在这个模块中想通过源码来学习下单例模式，让大家看看优秀的人是怎么使用单例模式的。</p> <h2>1、ErrorContext</h2> <p>在经常使用的mybatis的源码中有ErrorContext这样的一个类，下面贴出ErrorContext中的部分代码</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">package</span><span style="color: rgba(0, 0, 0, 1)"> org.apache.ibatis.executor;</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">  *</span><span style="color: rgba(128, 128, 128, 1)">@author</span><span style="color: rgba(0, 128, 0, 1)"> Clinton Begin</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> ErrorContext {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">final</span> String LINE_SEPARATOR = System.getProperty("line.separator","\n"<span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">final</span> ThreadLocal&lt;ErrorContext&gt; LOCAL =<span style="color: rgba(0, 0, 255, 1)">new</span> ThreadLocal&lt;&gt;<span style="color: rgba(0, 0, 0, 1)">();</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> ErrorContext stored;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String resource;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String activity;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String object;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String message;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> String sql;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> Throwable cause;<br/>  //私有构造方法</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> ErrorContext() {   }   //全局访问点</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> ErrorContext instance() {     ErrorContext context</span>=<span style="color: rgba(0, 0, 0, 1)"> LOCAL.get();</span><span style="color: rgba(0, 0, 255, 1)">if</span> (context ==<span style="color: rgba(0, 0, 255, 1)">null</span><span style="color: rgba(0, 0, 0, 1)">) {       context</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> ErrorContext();       LOCAL.set(context);     }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> context;   } }</span></pre> </div> <p>在上面的代码中，ErrorContext有私有的构造方法，同时具有instance()方法提供全局唯一访问点，而且从方法我们知道这应该是一个懒汉模式。</p> <p>再看下instance()方法，细心的小伙伴会说，这个不是全局唯一访问点，这是从Local变量中取的ErrorContext对象，而Local是ThreadLocal级别的，不是整个系统只有一份啊，这里我要说，大家不必局限于字眼，我们也可以把ThreadLocal看成是一个系统啊，它毕竟是属于线程级别的啊，要真正掌握的是单例的本质，可以仔细体会下。</p> <h2>2、LogFactory</h2> <p>同样是在mybatis的源码中有LogFactory类，局部代码如下，</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">final</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> LogFactory {</span><span style="color: rgba(0, 128, 0, 1)">/**</span><span style="color: rgba(0, 128, 0, 1)">    * Marker to be used by logging implementations that support markers</span><span style="color: rgba(0, 128, 0, 1)">*/</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">final</span> String MARKER = "MYBATIS"<span style="color: rgba(0, 0, 0, 1)">;</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">static</span> Constructor&lt;?<span style="color: rgba(0, 0, 255, 1)">extends</span> Log&gt;<span style="color: rgba(0, 0, 0, 1)"> logConstructor;</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 0, 1)"> {     tryImplementation(LogFactory::useSlf4jLogging);     tryImplementation(LogFactory::useCommonsLogging);     tryImplementation(LogFactory::useLog4J2Logging);     tryImplementation(LogFactory::useLog4JLogging);     tryImplementation(LogFactory::useJdkLogging);     tryImplementation(LogFactory::useNoLogging);   } //私有构造方法</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 0, 1)"> LogFactory() {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> disable construction</span><span style="color: rgba(0, 0, 0, 1)">  } }</span></pre> </div> <p>在该类中可以看到有私有方法，但是却没有提供全局的访问入口，您会说这也是单例模式吗，我说算，这个类符合单例的定义啊，具有私有构造方法肯定只有一个实例，但是却没有创建实例，这个类中其他的方法均是工具方法，为什么不提供全局访问入口，答案是用不到，用不到所以就不提供了啊。</p> <h2>3、单例bean</h2> <p>现在开发中用的最多的就是springboot，springboot的基础是spring，把类交给spring管理使用@Autowired就搞定了，您是不是也知道spring中的bean默认都是单例的，没错spring中使用了单例模式，有同学就说了，在平时写的类中也没有提供私有的构造方法啊，是如何保证单例的呐，还记得上边的思考问题吗？除了使用new的方式还有其他的方式，spring使用的是反射的方式，具体代码先不贴了，太多了，一时半会分析不明白，那全局的访问方式呐，答案是beanFactory</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/bce6809a14e8971ed974a569370519f2.jpg" alt="源码中的设计模式--单例模式"></p> <p>在beanFactory中定义了很多getBean的方法，调用这些方法便会返回一个单例bean，那这些单例bean存储在什么地方那，答案在DefaultSingletonBeanRegistry中，该类中有一个singletonObjects属性，该属性中就存着所有spring管理的单例bean，</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/47a198f2903f214c64230dfc02433dbc.jpg" alt="源码中的设计模式--单例模式"></p> <p>老铁们，看到了吧，这也是单例模式，但这个单例模式比平时自己写的单例模式高明多了，在生成唯一实例时使用的是反射，在提供全局的访问入口的时候，是从hashmap中返回的，比自己写个静态方法高明多了。</p> <p>有的小伙伴会问，一个类被spring管理也没提供私有方法，是不是可以自己new啊，是可以的，随便new多少个都行，但是只要被spring管理了默认就是单例的。</p> <p>好了，本次就说这么多，我们下次见！</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-94566.htm">restFul风格传参, 参数中带斜杠/问题</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-73942.htm" title="宠物粮食市场竞争与效益分析报告（宠物粮食市场份额）">宠物粮食市场竞争与效益分析报告（宠物粮食市场份额）</a></li>
                        <li class="py-2"><a href="/news/article-69331.htm" title="猫名字最旺家英文名（英文猫名字 希望带来运气）">猫名字最旺家英文名（英文猫名字 希望带来运气）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-node-share-links.htm" title="「3月10日」最高速度22.4M/S，2025年Nekoray每天更新免费节点订阅链接">「3月10日」最高速度22.4M/S，2025年Nekoray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-82154.htm" title="猫咪三联和狂犬疫苗价格（猫咪三联和狂犬疫苗价格一样吗）">猫咪三联和狂犬疫苗价格（猫咪三联和狂犬疫苗价格一样吗）</a></li>
                        <li class="py-2"><a href="/news/article-73270.htm" title="孕妇被猫抓伤出了一点血有危险么（孕妇被猫抓伤出了一点血有危险么嘛）">孕妇被猫抓伤出了一点血有危险么（孕妇被猫抓伤出了一点血有危险么嘛）</a></li>
                        <li class="py-2"><a href="/news/article-68041.htm" title="动物疫苗公司10强名单 动物疫苗公司10强名单公布">动物疫苗公司10强名单 动物疫苗公司10强名单公布</a></li>
                        <li class="py-2"><a href="/news/article-83591.htm" title="宠物商标名字大全10000个 宠物商标名字大全10000个带图片">宠物商标名字大全10000个 宠物商标名字大全10000个带图片</a></li>
                        <li class="py-2"><a href="/news/article-82870.htm" title="狗粮十大品牌里有优瑞派吗（优瑞派山茶油狗粮是天然粮吗）">狗粮十大品牌里有优瑞派吗（优瑞派山茶油狗粮是天然粮吗）</a></li>
                        <li class="py-2"><a href="/news/article-94566.htm" title="restFul风格传参, 参数中带斜杠/问题">restFul风格传参, 参数中带斜杠/问题</a></li>
                        <li class="py-2"><a href="/news/article-68040.htm" title="宠物疫苗放冰箱保质期多久（宠物疫苗能放多久）">宠物疫苗放冰箱保质期多久（宠物疫苗能放多久）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- about end -->
            <!-- footer start -->
<footer class="footer-area">
    <div class="footer-bottom-area">
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <div class="copyright">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p>
                            <a href="/">Free Nekoray官方节点站</a> 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- footer end -->
<!-- jquery
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/vendor/jquery-1.12.4.min.js"></script>
<!-- bootstrap JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/bootstrap.min.js"></script>
<!-- meanmenu JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.meanmenu.js"></script>
<!-- wow JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/wow.min.js"></script>
<!-- owl.carousel JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/owl.carousel.min.js"></script>
<!-- scrollUp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.scrollUp.min.js"></script>
<!-- Counter up js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.counterup.min.js"></script>
<script src="/assets/website/js/frontend/freenekoray/waypoints.min.js"></script>
<!-- Video Player JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.mb.YTPlayer.js"></script>
<!-- AJax Chimp JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.ajaxchimp.min.js"></script>
<!-- plugins JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/plugins.js"></script>
<!-- Nevo Slider js
        ============================================ -->
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/js/jquery.nivo.slider.js"></script>
<script type="text/javascript" src="/assets/website/js/frontend/freenekoray/custom-slider/home.js"></script>
<!-- Slick js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/slick.min.js"></script>
<!--Circle chart js-->
<script src="/assets/website/js/frontend/freenekoray/jquery.circliful.min.js"></script>
<!--Venobox js-->
<script src="/assets/website/js/frontend/freenekoray/venobox.min.js"></script>
<!-- Isotope js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/isotope.pkgd.min.js"></script>
<!-- textillate js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/jquery.textillate.js"></script>
<script src="/assets/website/js/frontend/freenekoray/jquery.lettering.js"></script>
<!-- animated headline js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/animate-heading.js"></script>
<!-- ajax js
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/ajax-mail.js"></script>
<!-- main JS
        ============================================ -->
<script src="/assets/website/js/frontend/freenekoray/styleswitch.js"></script>
<script src="/assets/website/js/frontend/freenekoray/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
        </div>
    </div>
</body>

</html>